ntp.conf

# /etc/ntp.conf, configuration for ntpd

driftfile /var/lib/ntp/ntp.drift

statistics loopstats peerstats clockstats
filegen loopstats file loopstats type day enable
filegen peerstats file peerstats type day enable
filegen clockstats file clockstats type day enable

# Specify one or more NTP servers.

{% if timelord is not defined or ansible_hostname == timelord %}
  {% for timeserver in toplevel_timeservers %}
    server {{ timeserver }} iburst
  {% endfor %}
  
  server 0.us.pool.ntp.org iburst
  server 1.us.pool.ntp.org iburst
  server 2.us.pool.ntp.org iburst
  server 3.us.pool.ntp.org iburst
 
  # And use the current local time as a fallback
  server 127.127.1.0
  fudge 127.127.1.0 stratum 10
  
{% else %}
   # Only use the time lord for time
   server {{ hostvars[groups[timelord][0]]['ansible_' ~ ntp_netdevice]['ipv4']['address'] }} iburst
{% endif %}

# Access control configuration

# By default, exchange time with everybody, but don't allow configuration.
restrict -4 default kod notrap nomodify nopeer noquery
restrict -6 default kod notrap nomodify nopeer noquery

# Local users may interrogate the ntp server more closely.
restrict 127.0.0.1

restrict ::1

{% if timelord is defined and ansible_hostname == timelord %}
  # Allow this server to act as TIMELORD: KEEPER OF ALL TIME
  restrict {{ hostvars[inventory_hostname]['ansible_' ~ ntp_netdevice]['ipv4']['network'] }} mask {{ hostvars[inventory_hostname]['ansible_' ~ ntp_netdevice]['ipv4']['netmask'] }} nomodify notrap
{% endif %}




ntp_playbook.yml

---

- hosts: *
  vars:
    - toplevel_timeservers: ['time.ord1.rackspace.com', 'time.ord2.rackspace.com']
    
    # TIMELORD IS THE KEEPER OF ALL OF THE TIME
    # This variable currently assumes that each server can be referenced by its own group.
    - timelord: 'apache-1'
    
    # The ethernet device that the servers will communicate over.
    - ntp_netdevice: 'eth0'
    
  tasks:
    - name: Install NTP
      apt: package=ntp state=present update_cache=yes
      tags: ntp
  
    - name: Copy over the NTP configuration
      template: src=ntp.conf dest=/etc/ntp.conf
      notify:
        - restart ntp
        - force ntp update
      tags: ntp
    
    - name: Make sure NTP is started up
      service: name=ntp state=started enabled=yes
      tags: ntp

    - name: Open inbound NTP connections for the timelord, time giver to all
      shell: ufw allow from {{ hostvars[inventory_hostname]['ansible_' ~ ntp_netdevice]['ipv4']['network'] }}/{{ hostvars[inventory_hostname]['ansible_' ~ ntp_netdevice]['ipv4']['netmask'] }} to any port 123
      when: timelord is defined and ansible_hostname == timelord
      tags: ntp
      
  handlers:
    - name: restart ntp
      service: name=ntp state=restarted
  
    - name: force ntp update
      shell: "service ntp stop && ntpdate -s {{ hostvars[groups[timelord][0]]['ansible_' ~ ntp_netdevice]['ipv4']['address'] }} && service ntp start"
      when: ansible_hostname != timelord
